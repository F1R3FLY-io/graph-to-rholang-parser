/* File generated by the BNF Converter (bnfc 2.9.6.1). */

#pragma once

#include "Absyn.h"

/* Certain applications may improve performance by changing the buffer size */
#define BUFFER_INITIAL 2048
/* You may wish to change _L_PAREN or _R_PAREN */
#define _L_PAREN '('
#define _R_PAREN ')'

/* The following are simple heuristics for rendering terminals */
/* You may wish to change them */
void renderCC(Char c);
void renderCS(String s);
void indent(void);
void backup(void);
void onEmptyLine(void);
void removeTrailingSpaces(void);
void removeTrailingWhitespace(void);

char *printGraph(Graph p);
char *printBinding(Binding p);
char *printGraphBinding(GraphBinding p);
char *printAttrVal(AttrVal p);
char *printAttrName(AttrName p);
char *printAttr(Attr p);
char *printListAttr(ListAttr p);
char *printVertex(Vertex p);
char *printName(Name p);
char *printListName(ListName p);

void ppGraph(Graph p, int i);
void ppBinding(Binding p, int i);
void ppGraphBinding(GraphBinding p, int i);
void ppAttrVal(AttrVal p, int i);
void ppAttrName(AttrName p, int i);
void ppAttr(Attr p, int i);
void ppListAttr(ListAttr p, int i);
void ppVertex(Vertex p, int i);
void ppName(Name p, int i);
void ppListName(ListName p, int i);

char *showGraph(Graph p);
char *showBinding(Binding p);
char *showGraphBinding(GraphBinding p);
char *showAttrVal(AttrVal p);
char *showAttrName(AttrName p);
char *showAttr(Attr p);
char *showListAttr(ListAttr p);
char *showVertex(Vertex p);
char *showName(Name p);
char *showListName(ListName p);

void shGraph(Graph p);
void shBinding(Binding p);
void shGraphBinding(GraphBinding p);
void shAttrVal(AttrVal p);
void shAttrName(AttrName p);
void shAttr(Attr p);
void shListAttr(ListAttr p);
void shVertex(Vertex p);
void shName(Name p);
void shListName(ListName p);

void ppUVar(String s, int i);
void ppLVar(String s, int i);
void shUVar(String s);
void shLVar(String s);
void ppInteger(Integer n, int i);
void ppDouble(Double d, int i);
void ppChar(Char c, int i);
void ppString(String s, int i);
void ppIdent(String s, int i);
void shInteger(Integer n);
void shDouble(Double d);
void shChar(Char c);
void shString(String s);
void shIdent(String s);
void bufEscapeS(const char *s);
void bufEscapeC(const char c);
void bufAppendS(const char *s);
void bufAppendC(const char c);
void bufReset(void);
void resizeBuffer(void);
