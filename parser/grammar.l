/* -*- c -*- File generated by the BNF Converter (bnfc 2.9.6). */

/* Lexer definition for use with FLex */

%option noyywrap noinput nounput
%option reentrant bison-bridge bison-locations

%top{
/* strdup was not in the ISO C standard before 6/2019 (C2x), but in POSIX 1003.1.
 * See: https://en.cppreference.com/w/c/experimental/dynamic/strdup
 * Setting _POSIX_C_SOURCE to 200809L activates strdup in string.h.
 */
#define _POSIX_C_SOURCE 200809L
}
%{
#include "Absyn.h"
#include "Bison.h"

#define initialize_lexer grammar__initialize_lexer

static void update_loc(YYLTYPE* loc, char* text)
{
  loc->first_line = loc->last_line;
  loc->first_column = loc->last_column;
  int i = 0;
  for (; text[i] != '\0'; ++i) {
      if (text[i] == '\n') {
          ++loc->last_line;
          loc->last_column = 0;
      } else {
          ++loc->last_column;
      }
  }
}
#define YY_USER_ACTION update_loc(yylloc, yytext);

%}

LETTER [a-zA-Z]
CAPITAL [A-Z]
SMALL [a-z]
DIGIT [0-9]
IDENT [a-zA-Z0-9'_]
%START CHAR CHARESC CHAREND STRING ESCAPED COMMENT

%%  /* Rules. */

<INITIAL>"{"      	 return _LBRACE;
<INITIAL>"}"      	 return _RBRACE;
<INITIAL>"0"      	 return _SYMB_2;
<INITIAL>"|"      	 return _BAR;
<INITIAL>"("      	 return _LPAREN;
<INITIAL>","      	 return _COMMA;
<INITIAL>")"      	 return _RPAREN;
<INITIAL>"["      	 return _LBRACK;
<INITIAL>"="      	 return _EQ;
<INITIAL>"]"      	 return _RBRACK;
<INITIAL>"*"      	 return _STAR;
<INITIAL>"\""      	 return _SYMB_11;
<INITIAL>"<"      	 return _LT;
<INITIAL>">"      	 return _GT;
<INITIAL>"_"      	 return _UNDERSCORE;
<INITIAL>"@"      	 return _AT;
<INITIAL>"in"      	 return _KW_in;
<INITIAL>"let"      	 return _KW_let;

<INITIAL>"//"[^\n]* /* skip */; /* BNFC: comment "//" */
<INITIAL>"/*" BEGIN COMMENT;
<COMMENT>"*/" BEGIN INITIAL;
<COMMENT>.    /* skip */;
<COMMENT>[\n] /* skip */;

<INITIAL>{CAPITAL}('|\_|({DIGIT}|{LETTER}))*|\_('|\_|({DIGIT}|{CAPITAL}))+    	 yylval->_string = strdup(yytext); return T_UVar;
<INITIAL>('|{SMALL})('|\_|({DIGIT}|{LETTER}))*|\_('|\_|({DIGIT}|{SMALL}))+    	 yylval->_string = strdup(yytext); return T_LVar;
<INITIAL>[ \t\r\n\f]      	 /* ignore white space. */;
<INITIAL>.      	 return _ERROR_;

%%  /* Initialization code. */

yyscan_t initialize_lexer(FILE *inp)
{
  yyscan_t scanner;
  if (yylex_init_extra(NULL, &scanner)) return 0;
  if (inp) yyrestart(inp, scanner);
  return scanner;
}

